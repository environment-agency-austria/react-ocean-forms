// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`withValidation should render without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): ShallowWrapper {
    "length": 1,
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <ValidatedComponent(TestComponent)
      asyncValidationWait={null}
      context={
        Object {
          "asyncValidateOnChange": false,
          "asyncValidationWait": 400,
          "busy": false,
          "defaultValues": Object {},
          "disabled": false,
          "fieldPrefix": null,
          "getFieldState": [MockFunction],
          "getValues": [MockFunction],
          "notifyFieldEvent": [MockFunction],
          "registerField": [MockFunction],
          "registerListener": [MockFunction],
          "stringFormatter": [MockFunction],
          "unregisterField": [MockFunction],
          "unregisterListener": [MockFunction],
        }
      }
      name="unitField"
    />,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "asyncValidationWait": null,
        "asyncValidators": undefined,
        "context": Object {
          "asyncValidateOnChange": false,
          "asyncValidationWait": 400,
          "busy": false,
          "defaultValues": Object {},
          "disabled": false,
          "fieldPrefix": null,
          "getFieldState": [MockFunction],
          "getValues": [MockFunction],
          "notifyFieldEvent": [MockFunction],
          "registerField": [MockFunction],
          "registerListener": [MockFunction],
          "stringFormatter": [MockFunction],
          "unregisterField": [MockFunction],
          "unregisterListener": [MockFunction],
        },
        "fullName": "unitField",
        "name": "unitField",
        "validation": Object {
          "error": null,
          "isValidating": false,
          "reset": [Function],
          "update": [Function],
          "valid": true,
          "validate": [Function],
        },
        "validators": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "asyncValidationWait": null,
          "asyncValidators": undefined,
          "context": Object {
            "asyncValidateOnChange": false,
            "asyncValidationWait": 400,
            "busy": false,
            "defaultValues": Object {},
            "disabled": false,
            "fieldPrefix": null,
            "getFieldState": [MockFunction],
            "getValues": [MockFunction],
            "notifyFieldEvent": [MockFunction],
            "registerField": [MockFunction],
            "registerListener": [MockFunction],
            "stringFormatter": [MockFunction],
            "unregisterField": [MockFunction],
            "unregisterListener": [MockFunction],
          },
          "fullName": "unitField",
          "name": "unitField",
          "validation": Object {
            "error": null,
            "isValidating": false,
            "reset": [Function],
            "update": [Function],
            "valid": true,
            "validate": [Function],
          },
          "validators": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
        },
      },
    },
  },
  Symbol(enzyme.__unrendered__): null,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "asyncValidationWait": null,
      "asyncValidators": undefined,
      "context": Object {
        "asyncValidateOnChange": false,
        "asyncValidationWait": 400,
        "busy": false,
        "defaultValues": Object {},
        "disabled": false,
        "fieldPrefix": null,
        "getFieldState": [MockFunction],
        "getValues": [MockFunction],
        "notifyFieldEvent": [MockFunction],
        "registerField": [MockFunction],
        "registerListener": [MockFunction],
        "stringFormatter": [MockFunction],
        "unregisterField": [MockFunction],
        "unregisterListener": [MockFunction],
      },
      "fullName": "unitField",
      "name": "unitField",
      "validation": Object {
        "error": null,
        "isValidating": false,
        "reset": [Function],
        "update": [Function],
        "valid": true,
        "validate": [Function],
      },
      "validators": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "asyncValidationWait": null,
        "asyncValidators": undefined,
        "context": Object {
          "asyncValidateOnChange": false,
          "asyncValidationWait": 400,
          "busy": false,
          "defaultValues": Object {},
          "disabled": false,
          "fieldPrefix": null,
          "getFieldState": [MockFunction],
          "getValues": [MockFunction],
          "notifyFieldEvent": [MockFunction],
          "registerField": [MockFunction],
          "registerListener": [MockFunction],
          "stringFormatter": [MockFunction],
          "unregisterField": [MockFunction],
          "unregisterListener": [MockFunction],
        },
        "fullName": "unitField",
        "name": "unitField",
        "validation": Object {
          "error": null,
          "isValidating": false,
          "reset": [Function],
          "update": [Function],
          "valid": true,
          "validate": [Function],
        },
        "validators": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
