// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Form /> invalid field registration case 1 of 5 props 1`] = `"[Form] registerField: invalid field state given"`;

exports[`<Form /> invalid field registration case 2 of 5 props 1`] = `"[Form] registerField: invalid field state given"`;

exports[`<Form /> invalid field registration case 3 of 5 props 1`] = `"[Form] registerField: invalid field state given"`;

exports[`<Form /> invalid field registration case 4 of 5 props 1`] = `"[Form] registerField: invalid field state given"`;

exports[`<Form /> invalid field registration case empty state 1`] = `"[Form] registerField: invalid field state given"`;

exports[`<Form /> invalid field registration case invalid field name 1`] = `"[Form] registerField: name is required"`;

exports[`<Form /> invalid field registration case no parameters 1`] = `"[Form] registerField: name is required"`;

exports[`<Form /> invalid field registration case no state 1`] = `"[Form] registerField: field state is required"`;

exports[`<Form /> should render without error 1`] = `
<ContextProvider
  value={
    Object {
      "asyncValidateOnChange": false,
      "asyncValidationWait": 400,
      "busy": false,
      "defaultValues": Object {},
      "disabled": false,
      "fieldPrefix": null,
      "getFieldState": [Function],
      "getValues": [Function],
      "notifyFieldEvent": [Function],
      "plaintext": false,
      "registerField": [Function],
      "registerListener": [Function],
      "stringFormatter": [Function],
      "submit": [Function],
      "unregisterField": [Function],
      "unregisterListener": [Function],
      "values": undefined,
    }
  }
>
  <form
    className=""
    onReset={[Function]}
    onSubmit={[Function]}
  >
    <div>
      unitChild
    </div>
  </form>
</ContextProvider>
`;
