// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Field /> should render without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Field
    asyncValidateOnChange={null}
    component={[Function]}
    context={
      Object {
        "asyncValidateOnChange": false,
        "asyncValidationWait": 400,
        "busy": false,
        "defaultValues": Object {},
        "disabled": false,
        "fieldPrefix": null,
        "getFieldState": [MockFunction],
        "getValues": [MockFunction],
        "notifyFieldEvent": [MockFunction],
        "registerField": [MockFunction] {
          "calls": Array [
            Array [
              "unitField",
              Object {
                "getValue": [Function],
                "label": "Unit field",
                "reset": [Function],
                "updateValidation": [MockFunction],
                "validate": [Function],
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "registerListener": [MockFunction],
        "stringFormatter": [MockFunction],
        "unregisterField": [MockFunction],
        "unregisterListener": [MockFunction],
      }
    }
    fullName="unitField"
    label="Unit field"
    name="unitField"
    validation={
      Object {
        "error": null,
        "isValidating": false,
        "reset": [MockFunction],
        "update": [MockFunction],
        "valid": true,
        "validate": [MockFunction],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "asyncValidateOnChange": null,
      "field": Object {
        "disabled": false,
        "id": "unitField",
        "name": "unitField",
        "onBlur": [Function],
        "onChange": [Function],
        "value": "",
      },
      "label": "Unit field",
      "meta": Object {
        "error": null,
        "isValidating": false,
        "stringFormatter": [MockFunction],
        "touched": false,
        "valid": true,
      },
      "name": "unitField",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "asyncValidateOnChange": null,
        "field": Object {
          "disabled": false,
          "id": "unitField",
          "name": "unitField",
          "onBlur": [Function],
          "onChange": [Function],
          "value": "",
        },
        "label": "Unit field",
        "meta": Object {
          "error": null,
          "isValidating": false,
          "stringFormatter": [MockFunction],
          "touched": false,
          "valid": true,
        },
        "name": "unitField",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
